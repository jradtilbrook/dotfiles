" required for Vundle
set nocompatible    " don't worry about compatibility



"---------------------------------- PLUGINS -----------------------------------"
call plug#begin('~/.vim/plugged')
    Plug 'junegunn/vim-plug'

    " extra languages
    Plug 'fatih/vim-go', { 'for': 'go', 'do': ':GoUpdateBinaries' }
    Plug 'leafgarland/typescript-vim', { 'for': ['javascript', 'typescript'] }
    Plug 'mxw/vim-jsx', { 'for': ['javascript', 'jsx'] }
    Plug 'pangloss/vim-javascript'
    Plug 'pearofducks/ansible-vim'
    Plug 'posva/vim-vue', { 'for': ['vue', 'javascript'] }
    Plug 'roxma/LanguageServer-php-neovim',  {'do': 'rm -f composer.lock && composer install && composer run-script parse-stubs'}

    " themes
    Plug 'airblade/vim-gitgutter'
    Plug 'chriskempson/base16-vim'
    Plug 'junegunn/goyo.vim', { 'on': 'Goyo' }
    Plug 'junegunn/limelight.vim', { 'on': 'Limelight' }
    Plug 'mhinz/vim-signify'
    Plug 'neovimhaskell/haskell-vim'
    Plug 'vim-airline/vim-airline'
    Plug 'vim-airline/vim-airline-themes'

    " navigating
    Plug 'Xuyuanp/nerdtree-git-plugin'
    Plug 'junegunn/fzf.vim'
    Plug 'scrooloose/nerdcommenter'
    Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
    Plug 'wesQ3/vim-windowswap'
    Plug 'xolox/vim-misc'

    " syntax/linting
    Plug 'editorconfig/editorconfig-vim'
    " Plug 'scrooloose/syntastic'
    Plug 'w0rp/ale'

    " completion
    Plug 'KabbAmine/zeavim.vim'
    Plug 'neoclide/coc.nvim', {'tag': '*', 'do': { -> coc#util#install()}}
    Plug 'honza/vim-snippets'
    Plug 'lvht/phpcd.vim', { 'for': 'php', 'do': 'rm -f composer.lock && composer install' }
    Plug 'sirver/ultisnips'
    Plug 'autozimu/LanguageClient-neovim', { 'branch': 'next', 'do': './install.sh' }

    " other utils
    Plug 'itchyny/calendar.vim'
    Plug 'junegunn/gv.vim', { 'on': 'GV' }
    Plug 'junegunn/vim-peekaboo'
    Plug 'sjl/gundo.vim'
    Plug 'terryma/vim-multiple-cursors'
    Plug 'tommcdo/vim-fubitive'
    Plug 'tpope/vim-fugitive'
    Plug 'tpope/vim-obsession'
    Plug 'tpope/vim-ragtag'
    Plug 'tpope/vim-repeat'
    Plug 'tpope/vim-rhubarb'
    Plug 'tpope/vim-speeddating'
    Plug 'tpope/vim-surround'
    Plug 'tpope/vim-unimpaired'
    " Plug 'skwp/greplace.vim'
    Plug 'wakatime/vim-wakatime'
call plug#end()



"---------------------------------- COLOURS -----------------------------------"
" don't fail if colorscheme not found
silent! colorscheme base16-solarflare
highlight Comment cterm=italic  " enable italics for comments
set termguicolors



set shada='100,<1000,s100,h     " increase buffer sizes
set number relativenumber       " display relative and normal line numbers
set mouse=a                     " enable mouse for all modes
set expandtab                   " expand tabs to spaces
set smarttab                    " delete 'shiftwidth' spaces at a time
set smartindent                 " add tabs by default
set breakindent                 " similar indents with wrapped lines
set autoindent                  " automatically indent
set shiftround                  " round indents to multiple of shiftwidth
set tabstop=4                   " number of spaces of <Tab>
set shiftwidth=4                " number of spaces of indent
set shiftround                  " round indents to nearest `shiftwidth`
set listchars+=tab:»\ ,trail:▫,eol:¬,space:·    " invisible characters
" set list                        " show invisibles
set foldmethod=indent           " fold with equal indents
set foldlevel=99                " leave all folds open by default
set autowriteall                " write contents when switching away
set nostartofline               " keep cursor in same column when moving

set scrolloff=5                 " show 5 context lines when scrolling
set sidescroll=1                " use continuous scrolling
set sidescrolloff=10            " show 10 context columns when scrolling
set nowrap                      " wrap lines by default
set colorcolumn=121             " vertical line at column 121

set hlsearch                    " highlight search matches
set incsearch                   " show incremental matches
set ignorecase                  " ignore case by default
set smartcase                   " include case if present

set t_Co=256                    " set terminal to 256 colours
" set cursorline                  " highlight current line
"set cursorcolumn                " higlight current column
set laststatus=2                " always show the status line
set backspace=indent,start,eol  " backspace over everything

set showcmd                     " show command line
set wildmenu                    " show command completion matches
set wildignore+=*.swp,*.pyc,*.o " ignore files when expanding wildcards
set autoread                    " automatically update external changes
set autowrite                   " automatically write file when moving away

set splitbelow                  " but the new window below
set splitright                  " put the new window to the right

set formatoptions+=ojr          " insert comment leader when using 'o' or 'O'
                                " insert comment leader on <Enter>
                                " remove comment leader when joining lines



"--------------------------- MAPPINGS TO REMEMBER -----------------------------"
" 'gq' will perform a format. pass a range to format those lines
" use 'gw' to keep the cursor at the same position

" === From airblade/vim-gitgutter ===
" <leader>hs stages hunk of current line
" <leader>hp to preview hunk
" hunk text objects: `ic` is everything in current hunk, `ac` includes surrounding empty lines

" === from wesQ3/vim-windowswap ===
" <leader>ww yank and paste windows to swap

" === from tpope/vim-obsession ===
" :Obsession starts a new session and keeps it updated


"---------------------------------- MAPPINGS ----------------------------------"
" change <Leader> to ','
let mapleader=','
" save pressing shift
nmap ; :
" shortcut to edit vimrc file
nmap <Leader>ev :edit $HOME/.vimrc<cr>
" shortcut to edit i3 config
nmap <Leader>ei :edit $HOME/.config/i3/config<cr>
" shortcut to edit Zsh config
nmap <Leader>ez :edit $HOME/.zshrc<cr>
" remove highlighted search
nmap <Leader><space> :nohlsearch<cr>
" toggle limelight to only highlight paragraph around cursor
nnoremap <silent> <Leader>ll :Limelight!!<cr>
" toggle goyo for simple focussed editing
nnoremap <silent> <Leader>yy :Goyo<cr>
" Open new line below and above current line
nnoremap <leader>o o<esc>
nnoremap <leader>O O<esc>
" fzf map
nnoremap <silent> <C-P> :Files<cr>
nnoremap <silent> <C-B> :Buffers<cr>
nnoremap <silent> <C-M> :Marks<cr>
nnoremap <silent> <leader>t :BTags<cr>
nnoremap <silent> <leader>gl :Commits<CR>
nnoremap <silent> <leader>ga :BCommits<CR>
" shortcuts for tab/buffer navigation
nnoremap <silent> <leader>n :bprev<cr>
nnoremap <silent> <leader>m :bnext<cr>
nnoremap ]b :bnext<cr>
nnoremap [b :bprev<cr>

" easier split movements
nmap <C-H> <C-W><C-H>
nmap <C-J> <C-W><C-J>
nmap <C-K> <C-W><C-K>
nmap <C-L> <C-W><C-L>

" bind K to grep word under cursor using fzf
nnoremap <silent> K :execute 'Rg' expand('<cword>')<CR>

" toggle nerdtree
nmap <C-\> :NERDTreeToggle<cr>

" use space to toggle folding
nnoremap <space> za
" search for word under cursor
nnoremap // yiw/<C-R>"<CR>

" vim-fugitive
map <Leader>gs :Gstatus<CR>
map <Leader>gd :Gdiff<CR>
map <Leader>gc :Gcommit<CR>
map <Leader>gw :Gwrite<CR>
map <Leader>gp :Gpush<CR>
map <Leader>go :Gbrowse<CR>



"------------------------------- AUTO COMMANDS --------------------------------"
" augroup autosourcing
"     " clear the group
"     autocmd!
"     " source vimrc when it changes
"     autocmd BufWritePost $MYVIMRC source $MYVIMRC
" augroup END

autocmd FileType php setl iskeyword+=$



"------------------------------ PLUGIN CONFIGS --------------------------------"
" vim-airline
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1

" ultisnips
let g:UltiSnipsJumpForwardTrigger = '<c-h>'

" calendar
let g:calendar_google_calendar = 1
let g:calendar_google_task = 1
let g:calendar_task = 1

" ale
let g:ale_lint_on_text_changed = 'never'

" fzf
let g:fzf_layout = {'down': '15'} " number of results to show
let g:fzf_buffers_jump = 1  " jump to open buffer if possible

" use rg for grep
if executable('rg')
    set grepprg=rg\ --vimgrep
    set grepformat^=%f:%l:%c:%m
endif

" NERDTree
let NERDTreeHijackNetrw = 0

" NERDCommenter
let NERDCommentEmptyLines = 1
let NERDRemoveExtraSpaces = 1
let NERDSpaceDelims = 1
let NERDDefaultAlign = 'left'

" ansible-vim
let g:ansible_name_highlight = 'b'
let g:ansible_extra_keywords_highlight = 1

" vim-jsx
let g:jsx_ext_required = 0

" vim-go
let g:go_fmt_command = "goimports"

" KabbAmine/zeavim.vim
let g:zv_file_types = {
    \ 'php' : 'php,laravel,phpunit,yii,doctrine,cakephp'
    \ }
