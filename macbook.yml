#! /usr/bin/env ansible-playbook

## ---------------------------------------------------
## macOS ansible playbook for setting up a new machine
## ---------------------------------------------------
---
- name: Playbook for setting up a new mac
  hosts: localhost

  vars_files:
    - vars/vault.yml # stores secure variables
    - vars/defaults.yml  # default variables

  tasks:
    ## -----------------------------------------------
    ## Include vars_file for overriding default values
    ## -----------------------------------------------
    - name: include override vars_file (if it exists)
      tags: always
      include_vars: "{{ item }}"
      with_first_found:
        - files:
            - vars/override.yml
          skip: true # don't error if not found


    ## ----------------------
    ## Homebrew related tasks
    ## ----------------------
    - name: install homebrew taps
      tags: brew
      homebrew_tap:
        tap: "{{ item }}"
      with_items: "{{ homebrew_taps }}"

    - name: install apps with homebrew-cask
      tags: brew
      homebrew_cask:
        cask: "{{ item }}"
        update_homebrew: yes
      with_items: "{{ homebrew_casks }}"

    - name: install packages with homebrew
      tags: brew
      homebrew:
        name: "{{ item }}"
        update_homebrew: yes
      with_items: "{{ homebrew_formulae }}"


    ## ------------------------------
    ## Atom packages and config files
    ## ------------------------------
    - name: install atom packages
      tags: atom
      shell: apm install {{ item }}
      args:
        creates: "{{ ansible_user_dir }}/.atom/packages/{{ item }}"
      with_items: "{{ atom_packages }}"

    # - name: install atom configuration files
    #   tags: atom


    ## ---------------------
    ## SSH key configuration
    ## ---------------------
    - name: create ssh key
      tags: ssh
      shell: ssh-keygen -t rsa -b 4096 -C "{{ ansible_hostname | regex_replace('-|_', ' ') }}" -f "{{ ansible_user_dir }}/.ssh/id_rsa"
      args:
        creates: "{{ ansible_user_dir }}/.ssh/id_rsa"
      register: ssh_key

    - name: print ssh public key to upload to bitbucket
      tags: ssh
      debug:
        msg: "{{ lookup('file', '{{ ansible_user_dir }}/.ssh/id_rsa.pub') }}"
      when: ssh_key | changed

    - name: add ssh key to keychain
      tags: ssh
      shell: ssh-add -K {{ ansible_user_dir }}/.ssh/id_rsa
      when: ssh_key | changed

    - name: upload key to github (through api)
      tags: ssh
      github_key:
        name: "{{ ansible_hostname | regex_replace('-|_', ' ') }}"
        pubkey: "{{ lookup('file', '{{ ansible_user_dir }}/.ssh/id_rsa.pub') }}"
        token: "{{ vault_github_api_token }}"
        force: no
      when: ssh_key | changed


    ## -------------------
    ## Configuration files
    ## -------------------
    # - name: export environment variables

    - name: symlink dotfiles to home directory
      tags: dotfiles
      file:
        src: "{{ item }}"
        dest: "{{ ansible_user_dir }}/.{{ item | basename }}"
        state: link
      with_fileglob: files/*

    - name: import dotfile templates to home directory
      tags: dotfiles
      template:
        src: "{{ item }}"
        dest: "{{ ansible_user_dir }}/.{{ item | basename | splitext | first }}"
      with_fileglob: templates/*
