---
## ----------------------
## Homebrew related tasks
## ----------------------
- name: install homebrew taps
  tags: brew
  homebrew_tap:
    tap: "{{ item }}"
  loop: "{{ homebrew_taps }}"

- name: install mac apps
  tags: brew
  homebrew_cask:
    cask: "{{ item }}"
  loop: "{{ homebrew_casks }}"

- name: install mac packages
  tags: brew
  homebrew:
    name: "{{ homebrew_formulae }}"


## ----------
## Dock items
## ----------
- name: find current dock items
  tags: dock
  shell: dockutil --list | cut -f 1
  register: current_dock
  changed_when: no
  check_mode: no # this doesn't make changes so can run in check mode

- name: remove unnecessary dock items
  tags: dock
  shell: dockutil --remove "{{ item }}" --no-restart
  loop: "{{ current_dock.stdout_lines }}"
  when: item not in (dock_items | map(attribute='name') | map('basename') | map('splitext') | map('first') | list)
  notify: restart dock

- name: add/rearrange dock items
  tags: dock
  shell: >
    [ "`dockutil --find '{{ item.name | basename | splitext | first }}' | \
      sed -n 's/.*slot \\([[:digit:]]*\\).*/\\1/p'`" -eq {{ index + 1 }} ] \
      2> /dev/null || \
    ( \
      dockutil --find "{{ item.name | basename | splitext | first }}" \
        > /dev/null && \
      dockutil --move "{{ item.name | basename | splitext | first }}" \
        --position {{ index + 1 }} --no-restart \
        {{ item.options | default() }} && \
      echo changed \
    ) || \
    ( \
      dockutil --add "{{ item.name }}" \
        --position {{ index + 1 }} --no-restart \
        {{ item.options | default() }} && \
      echo changed \
    )
  loop: "{{ dock_items }}"
  loop_control:
    index_var: index
  register: dock_change
  changed_when: '"changed" in dock_change.stdout'
  notify: restart dock


## ----------------------------
## Settings accessible from CLI
## ----------------------------
#TODO: this needs testing
- name: set plist defaults
  tags: plist
  osx_defaults:
    state: present
    domain: "{{ item.domain }}"
    key: "{{ item.key }}"
    value: "{{ item.value }}"
    type: "{{ item.type }}"
  loop: "{{ osx_defaults }}"
  notify: restart mac services
  when: no
